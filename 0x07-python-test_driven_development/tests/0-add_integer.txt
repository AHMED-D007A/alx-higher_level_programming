The ''Add Intege'' module
===========================

Using ''add_integer''
----------------------

This is a test file in reStructureText format. First import
''add_integer'' form the ''Add integer'' module:

    >>> add_integer = __import__("0-add_integer").add_integer

Now use it:

    >>> add_integer("School", 1)
    Traceback (most recent call last):
        ...
    TypeError: a must be an integer

    >>> add_integer(1, "School")
    Traceback (most recent call last):
        ...
    TypeError: b must be an integer

    >>> add_integer(float("inf"), 1)
    Traceback (most recent call last):
        ...
    OverflowError: cannot convert float infinity to integer

    >>> add_integer(1, float("inf"))
    Traceback (most recent call last):
        ...
    OverflowError: cannot convert float infinity to integer

    >>> add_integer(-float("inf"), 1)
    Traceback (most recent call last):
        ...
    OverflowError: cannot convert float infinity to integer

    >>> add_integer(1, -float("inf"))
    Traceback (most recent call last):
        ...
    OverflowError: cannot convert float infinity to integer

    >>> add_integer([1, 2, 3], 0)
    Traceback (most recent call last):
        ...
    TypeError: a must be an integer

    >>> add_integer(0, [1, 2, 3])
    Traceback (most recent call last):
        ...
    TypeError: b must be an integer

    >>> add_integer({1: "yo"}, 0)
    Traceback (most recent call last):
        ...
    TypeError: a must be an integer

    >>> add_integer(0, {1: "yo"})
    Traceback (most recent call last):
        ...
    TypeError: b must be an integer

    >>> add_integer(2, 96)
    98

    >>> add_integer(-2, -96)
    -98

    >>> add_integer(100, -2)
    98

    >>> add_integer(-2, 100)
    98
    >>> add_integer(None)
    Traceback (most recent call last):
        ...
    TypeError: a must be an integer
